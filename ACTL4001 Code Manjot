#########################################################################
# INITIALISATION AND SET-UP                                             #
#########################################################################

# Installing packages
list.of.packages <- c("ggplot2", "dplyr", "fitdistrplus", "Renext")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)

# Note, assumes all relevant files are in the same folder as the R script
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))

library('ggplot2')
library('dplyr')
library('fitdistrplus')
library('Renext')


#########################################################################
# EDA                                                                   #
#########################################################################

# adding on the age of death onto the dataset
inforce_dataset <- read.csv('2024-srcsc-superlife-inforce-dataset.csv', header = TRUE)
inforce_dataset <- inforce_dataset %>%
  mutate(Death.age = Issue.age + Year.of.Death - Issue.year)

# investigating the age of death
death_age <- inforce_dataset %>%
  filter(Death.indicator == 1) %>%
  group_by(Death.age) %>%
  summarise(total = n())

# investigating year of death
deaths_series <- inforce_dataset %>%
  filter(Death.indicator == 1) %>%
  group_by(Year.of.Death) %>%
  summarise(total=n())

# investigating when the 2019 deaths policies were issued
inv_2019 <- inforce_dataset %>%
  filter(Death.indicator == 1, Year.of.Death == 2019) %>%
  group_by(Issue.year) %>%
  summarise(total = n())

# investigating when the 2020 deaths policies were issued
inv_2020 <- inforce_dataset %>%
  filter(Death.indicator == 1, Year.of.Death == 2020) %>%
  group_by(Issue.year) %>%
  summarise(total = n())

# investigating the issue year
issue_date <- inforce_dataset %>%
  group_by(Issue.year) %>%
  summarise(total=n())

#####
# FINDINGS: SPIKE OF DEATHS CAN BE EXPLAINED BY INTAKE OF NEW CUSTOMERS
#####

# investigating the cause of death
deaths <- inforce_dataset %>%
  filter(Death.indicator == 1) %>%
  group_by(Cause.of.Death) %>%
  summarise(total=n())

# investigating the cause of death over time, and plotting
deaths_time <- inforce_dataset %>%
  filter(Death.indicator == 1) %>%
  group_by(Year.of.Death, Cause.of.Death) %>%
  summarise(total=n())
deaths_time_wide <- as.data.frame.matrix(xtabs(total ~ Year.of.Death + Cause.of.Death, deaths_time))
plot_deaths <- data.frame(Year.of.Death = row.names(deaths_time_wide), deaths_time_wide, row.names = NULL)

ggplot(plot_deaths, aes(x=Year.of.Death, group = 1)) +
  geom_line(aes(y=V1)) +
  geom_line(aes(y=A00.B99)) + 
  geom_line(aes(y=C00.D48)) +
  geom_line(aes(y=D50.D89)) +
  geom_line(aes(y=E00.E88)) +
  geom_line(aes(y=F01.F99)) +
  geom_line(aes(y=G00.G98)) +
  geom_line(aes(y=I00.I99)) +
  geom_line(aes(y=J00.J98)) +
  geom_line(aes(y=K00.K92)) +
  geom_line(aes(y=L00.L98)) +
  geom_line(aes(y=M00.M99)) +
  geom_line(aes(y=N00.N98)) +
  geom_line(aes(y=O00.O99)) +
  geom_line(aes(y=Q00.Q99)) +
  geom_line(aes(y=R00.R99)) +
  geom_line(aes(y=V01.Y89))

# investigating the effect of gender on the cause of death
gender <- inforce_dataset %>%
  filter(Death.indicator == 1) %>%
  group_by(Sex, Cause.of.Death) %>%
  summarise(total=n())

#####
# FINDINGS: TWO MAIN CAUSES OF DEATH ARE CANCERS AND HEART DISEASE
#####

# investigating the policy type
policies <- inforce_dataset %>%
  group_by(Policy.type) %>%
  summarise(total=n())

# investigating the type of policy issued over time
policies_series <- inforce_dataset %>%
  group_by(Policy.type, Issue.year) %>%
  summarise(total=n())

#####
# FINDINGS: AROUND 37% OF THE POLICIES ARE WHOLE LIFE POLICIES
#####

# investigating the proportion of risk issued per year
underclass <- inforce_dataset %>%
  group_by(Underwriting.Class, Issue.year) %>%
  summarise(total = n())

#####
# FINDINGS: CONSTANT LEVEL OF UNDERWRITING RISK??
#####

# investigating the proportion/number of smokers issued each year
smoker_series <- inforce_dataset %>%
  group_by(Smoker.Status, Issue.year) %>%
  summarise(total = n())
smoker_series_wide <- as.data.frame.matrix(xtabs(total ~ Issue.year + Smoker.Status, smoker_series))
smoker_df <- data.frame(Issue.year = row.names(smoker_series_wide), smoker_series_wide, row.names = NULL)

num <- inforce_dataset %>%
  group_by(Issue.year) %>%
  summarise(total=n())

smoker_df$total <- num$total
smoker_prop <- smoker_df %>%
  mutate(NS = NS/total,
         S = S/total)

#####
# FINDINGS: PROPORTION OF SMOKERS DECREASING QUITE A BIT
#####

# investigating the effect of region on face amount
region_insured <- inforce_dataset %>%
  group_by(Region, Face.amount) %>%
  summarise(total = n())

# investigating the effect of region on death
region_deaths <- inforce_dataset %>%
  filter(Death.indicator == 1) %>%
  group_by(Region) %>%
  summarise(total = n())
  

#########################################################################
# ATTEMPT TO FIT A MODEL ON SEVERITY                                    #
#########################################################################

#getting the face value of the death claims, and scaling down for modelling
severity_claims <- inforce_dataset %>%
  filter(Death.indicator == 1) %>%
  reframe(Face.amount = Face.amount/100000)

severity_summary <- inforce_dataset %>%
  filter(Death.indicator == 1) %>%
  group_by(Face.amount) %>%
  summarise(total = n())

# defining the pareto distribution
dpareto <- function(x,alpha,theta) {
  rep(alpha*theta^alpha,length(x))/x^(alpha+1)
}
ppareto <- function(q,alpha,theta) { 
  rep(1,length(q))-(rep(theta,length(q))/q)^alpha
}
qpareto <- function(p,alpha,theta) {
  theta*(rep(1,length(p))-p)^(-1/alpha)
}

# estimating the parameters of each distribution using mle
lnorm_fit <- fitdist(severity_claims$Face.amount,"lnorm","mle")
gamma_fit <- fitdist(severity_claims$Face.amount,"gamma","mle")
pareto_fit <- fitdist(severity_claims$Face.amount,"pareto","mle",list(alpha=0.9), fix.arg=list(theta=min(severity_claims$Face.amount)))
mixedexp_fit <- fitdist(severity_claims$Face.amount,"mixexp2","mle",list(prob1=0.5,rate1=0.01,rate2=0.01,delta=0))

# creating plot for each type of fit (can also do statistical evaluations)
xgrid <- seq(min(severity_claims$Face.amount),max(severity_claims$Face.amount),length=length(severity_claims$Face.amount))
distdata_df <- data.frame(cbind(severity_claims$Face.amount,xgrid))

fitted_dlnorm <- dlnorm(xgrid,lnorm_fit$estimate[1],lnorm_fit$estimate[2])
fitted_dgamma <- dgamma(xgrid,gamma_fit$estimate[1],gamma_fit$estimate[2])
fitted_dpareto <- dpareto(xgrid,pareto_fit$estimate[1],pareto_fit$fix.arg$theta)
fitted_dmixedexp <- dmixexp2(xgrid,mixedexp_fit$estimate[1],mixedexp_fit$estimate[2],mixedexp_fit$estimate[3])

distdata_df <-cbind(distdata_df,fitted_dlnorm,fitted_dgamma,fitted_dpareto,fitted_dmixedexp)

# plotting results
colours <- c("Log-Normal"="blue","Gamma"="red","Pareto"="green","Mixed Exponential"="yellow")
ggplot(distdata_df,aes(x=V1,y=..density..)) +
  geom_histogram(colour="black",fill="white", bins=20) +
  geom_line(aes(xgrid,fitted_dlnorm,colour="Log-Normal"),lwd=1) +
  geom_line(aes(xgrid,fitted_dgamma,colour="Gamma"),lwd=1) +
  geom_line(aes(xgrid,fitted_dpareto,colour="Pareto"),lwd=1) +
  geom_line(aes(xgrid,fitted_dmixedexp,colour="Mixed Exponential"),lwd=1) +
  labs(x = "Claim Cost ($)",
       y = "Density",
       colour = "Legend",
       title = "Fitted Densities vs Claims") +
  scale_color_manual(values=colours)

#####
# FINDINGS: SEVERITY CANNOT BE MODELLED BY PROBABILITY DISTRIBUTION
#####


#########################################################################
# FINDING THE TREND OF SEVERITY OVER TIME                               #
#########################################################################

# finding the proportion of customers in each policy per issue year
severity_series <- inforce_dataset %>%
  group_by(Face.amount, Issue.year) %>%
  summarise(total = n())
severity_series_wide <- as.data.frame.matrix(xtabs(total ~ Issue.year + Face.amount, severity_series))
severity_df <- data.frame(Issue.year = row.names(severity_series_wide), severity_series_wide, row.names = NULL)

severity_df$total <- num$total
severity_prop <- severity_df %>%
  mutate(X50000 = X50000/total,
         X100000 = X100000/total,
         X250000 = X250000/total,
         X500000 = X500000/total,
         X1000000 = X1000000/total,
         X2000000 = X2000000/total)

# plotting results
colours = c("50,000"="blue","100,000"="red","250,000"="yellow","500,000"="green",
            "1,000,000"="orange","2,000,000"="purple")
ggplot(severity_prop, aes(x=Issue.year, group=1)) +
  geom_line(aes(y=X50000, colour="50,000")) +
  geom_line(aes(y=X100000, colour="100,000")) + 
  geom_line(aes(y=X250000, colour="250,000")) +
  geom_line(aes(y=X500000, colour="500,000")) +
  geom_line(aes(y=X1000000, colour="1,000,000")) +
  geom_line(aes(y=X2000000, colour="2,000,000")) +
  labs(colour = "Legend",
       x="Issue Year",
       y="Proportion",
       title="Sum Insured Proportions Per Year") +
  scale_color_manual(values=colours) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

# linear regression of the severity over time for each type of sum insured
severity_prop$time <- c(1:23)
lm50K <- lm(X50000~time,data=severity_prop)
lm100K <- lm(X100000~time,data=severity_prop)
lm250K <- lm(X250000~time,data=severity_prop)
lm500K <- lm(X500000~time,data=severity_prop)
lm1000K <- lm(X1000000~time,data=severity_prop)
lm2000K <- lm(X2000000~time,data=severity_prop)

summary(lm50K)
summary(lm100K)
summary(lm250K)
summary(lm500K)
summary(lm1000K)
summary(lm2000K)


#########################################################################
# FOR PRICING                                                          #
#########################################################################

# getting the number of people with different sum insured and different ages
# based on smoking status and policy type
insured_byage_wn <- inforce_dataset %>%
  filter(Policy.type == "SPWL", Smoker.Status == "NS") %>%
  group_by(Issue.age, Face.amount) %>%
  summarise(total = n())
insured_byage_wn_wide <- as.data.frame.matrix(xtabs(total ~ Issue.age + Face.amount, insured_byage_wn))
insured_byage_wn_df <- data.frame(Issue.age = row.names(insured_byage_wn_wide), insured_byage_wn_wide, row.names = NULL)

insured_byage_tn <- inforce_dataset %>%
  filter(Policy.type == "T20", Smoker.Status == "NS") %>%
  group_by(Issue.age, Face.amount) %>%
  summarise(total = n())
insured_byage_tn_wide <- as.data.frame.matrix(xtabs(total ~ Issue.age + Face.amount, insured_byage_tn))
insured_byage_tn_df <- data.frame(Issue.age = row.names(insured_byage_tn_wide), insured_byage_tn_wide, row.names = NULL)

insured_byage_ws <- inforce_dataset %>%
  filter(Policy.type == "SPWL", Smoker.Status == "S") %>%
  group_by(Issue.age, Face.amount) %>%
  summarise(total = n())
insured_byage_ws_wide <- as.data.frame.matrix(xtabs(total ~ Issue.age + Face.amount, insured_byage_ws))
insured_byage_ws_df <- data.frame(Issue.age = row.names(insured_byage_ws_wide), insured_byage_ws_wide, row.names = NULL)

insured_byage_ts <- inforce_dataset %>%
  filter(Policy.type == "T20", Smoker.Status == "S") %>%
  group_by(Issue.age, Face.amount) %>%
  summarise(total = n())
insured_byage_ts_wide <- as.data.frame.matrix(xtabs(total ~ Issue.age + Face.amount, insured_byage_ts))
insured_byage_ts_df <- data.frame(Issue.age = row.names(insured_byage_ts_wide), insured_byage_ts_wide, row.names = NULL)


#########################################################################
# LAPSE RATES                                                           #
#########################################################################

policy_lapse <- inforce_dataset %>%
  filter(!is.na(Lapse.Indicator)) %>%
  group_by(Policy.type) %>%
  summarise(total = n())

### NOTE: THIS SHOWS THAT WLI POLICIES HAVE 0% LAPSE RATE

# checking the last year of lapse
t20_lapse_year <- inforce_dataset %>%
  filter(!is.na(Lapse.Indicator)) %>%
  group_by(Year.of.Lapse) %>%
  summarise(total = n())

# time when policies lapsed
t20_lapse <- inforce_dataset %>%
  filter(Policy.type == "T20", !is.na(Lapse.Indicator)) %>%
  mutate(Time.Lapse = Year.of.Lapse - Issue.year) %>%
  group_by(Time.Lapse) %>%
  summarise(total = n())

# length of policies with no lapse and no death 
t20_length_pt1 <- inforce_dataset %>%
  filter(Policy.type == "T20", is.na(Death.indicator), is.na(Lapse.Indicator)) %>%
  mutate(Length.Policy = 2023 - Issue.year) %>%
  group_by(Length.Policy) %>%
  summarise(total = n())
t20_length_pt1 <- rbind(t20_length_pt1, c(19, 0))
  
# length of policies with death
t20_length_pt2 <- inforce_dataset %>%
  filter(Policy.type == "T20", Death.indicator == 1) %>%
  mutate(Length.Policy = Year.of.Death - Issue.year) %>%
  group_by(Length.Policy) %>%
  summarise(total = n())

# getting the lapse rate per year of policy in force
sum_force <- sum(t20_lapse$total)+sum(t20_length_pt1$total)+sum(t20_length_pt2$total)
total_force <- t20_lapse
total_force$total[1] = sum_force
for (n in 2:20) {
  total_force$total[n] = total_force$total[n-1]-t20_lapse$total[n-1]-t20_length_pt1$total[n-1]-t20_length_pt2$total[n-1]
}

lapse_rate <- t20_lapse
lapse_rate$total = t20_lapse$total/total_force$total


#####
# FINDINGS: LAPSE RATE = 1%
#####
